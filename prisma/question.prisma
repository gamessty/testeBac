model Question {
    id             String         @id @default(auto()) @map("_id") @db.ObjectId
    subjectId      String?        @db.ObjectId
    chapterId      String?        @db.ObjectId
    userTestId     String?        @db.ObjectId
    type           QuestionType
    answer         String? // the answer to the question, used in case of fill in the blank or true/false
    question       String
    options        Option[]
    additionalData AdditionalData
    createdAt      DateTime       @default(now())
    updatedAt      DateTime       @updatedAt

    subject  Subject?  @relation(fields: [subjectId], references: [id], onDelete: Cascade)
    chapter  Chapter?  @relation(fields: [chapterId], references: [id], onDelete: Cascade)
    userTests UserTestOnQuestion[]

    @@map("questions")
}

enum QuestionType {
    singleChoice
    multipleChoice
}

type Option {
    id           String @default(uuid())
    option       String
    image        String?
    code         Code[]
    isCorrect    Boolean        @default(false)
    localization Localization[]
}

type AdditionalData {
    image        String?
    code         Code[]
    explanation  AnswerIndicator?
    localization Localization[]
}

type Localization {
    locale String
    text   String
}

type AnswerIndicator {
    code     Code[]
    markdown String?
}

type Code {
    language String[]
    code     String
}

type SchemaConfigurator {
    showCorrectAnswer Boolean @default(false)
    questionNumber    Int
    timeLimit         Int?
}
